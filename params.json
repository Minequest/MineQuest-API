{"body":"# Overview\r\nThis site was created to help developers look up information and integrate MineQuest into their plugins through the use of this API. If you're looking to also integrate with our RPG and NPC plugins, you should check out their APIs and overview pages respectively.\r\n\r\n## Linking to MineQuest-2-API\r\nYou can most easily do this with Maven.\r\n```\r\n<dependency>\r\n   <groupId>com.theminequest</groupId>\r\n   <artifactId>MineQuest-API</artifactId>\r\n   <version>2.0.0-SNAPSHOT</version>\r\n</dependency>\r\n```\r\nIn addition, you'll need our repository:\r\n```\r\n<repositories>\r\n   <repository>\r\n      <id>jci-lincom</id>\r\n      <url>http://jci.lincomlinux.org/plugin/repository/everything/</url>\r\n   </repository>\r\n</repositories>\r\n```\r\n\r\n## Accessing Information\r\nAll accessible information should be done through the managers provided. See the [Managers](http://jci.lincomlinux.org/job/MineQuest-API/javadoc/com/theminequest/MineQuest/API/Managers.html) class for more information on how to access these managers.\r\n\r\n## Listening to System Events\r\nWhenever an action is triggered in MineQuest, the respective event is fired to the system event system for any plugins to process. You should see a list of these events in **com.theminequest.MineQuest.API.Events**, and select your system respectively. We have a wrapper that automatically fires the correct event for the correct system.\r\n\r\nSome events are cancellable. Should you not want an event to occur, simply cancel it.\r\n\r\n## Creating Quest Events\r\nQuest Events - that is, events that trigger during a quest, allow complete control over the quest (and if manually triggered outside a quest, complete control of the server).\r\n\r\nA brief overview of how this works:\r\n* You make a class that extends QuestEvent, DelayedQuestEvent, TargetQuestEvent, or another class that extends off of one of those. It must have a default constructor (aka, no parameters in the constructor). \r\n* MineQuest, with its EventManager, takes that event, initializes it, and keeps track of it.\r\n* *In addition*, to have your event display an objective to the user, you may implement UserQuestEvent.\r\n\r\nYou can find the source for [these events](http://jci.lincomlinux.org/job/MineQuest-API/javadoc/com/theminequest/MineQuest/API/Events/package-summary.html) in the Javadoc.\r\n\r\nAfter you have created your QuestEvent, you should register it. The **EventManager** class should help\r\nyou register your new event with MineQuest so that it becomes functional. Give your event a name and register it and the class you've just created that implements QuestEvent! (Hint: EventManager's addEvent() method)\r\n\r\n## Accessing the Quest Parser\r\nIf you wanted to add your own touch into Quest files, there's never been a better time! You can do that with our QuestParser interface. It's quite simple to implement and register.\r\n\r\nYou should implement the QuestParser.QHandler interface.\r\n\r\nThe QuestDetails class describes the quest from start to finish, including every single minute detail. It is simply a LinkedHashMap database of String keys and **Serializable** objects. Simply see the Javadocs to learn on how to access the properties.\r\n\r\nNow register it with the quest parsing system! You should go to the QuestManager, and register it, giving your parser a name (to identify it while parsing), and a new instance of the class you've just created that implements QuestParser.QHandler!","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"MineQuest-2-API","google":"","tagline":"A Quick Overview"}